{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/endGame.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","PADDLE_WIDTH","PADDLE_HEIGHT","BOARD_GAP","SPEED","RADIUS","RADIUS2","TEXT_SIZE","KEYS","p1up","p1down","p2up","p2down","pause","begin","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","appendChild","line","Paddle","boardHeight","paddleWidth","paddleHeight","initialX","initialY","keyUp","keyDown","x","y","score","speed","addEventListener","event","key","moveUp","moveDown","Math","max","min","walls","left","top","right","bottom","paddle1","Ball","boardWidth","radius","color","direction","ping","Audio","audioFile","ping2","audioFile2","reset","vx","vy","floor","random","abs","hitsTop","hitsBottom","player1","player2","increaseScore","p2","getCoordinates","play","p1","circle","wallCollision","paddleCollision","goalCollision","Score","xPosition","yPosition","text","textContent","endGame","Game","element","paused","gameElement","getElementById","board","boardMid","paddle2Gap","paddle2","ball","ball2","score1","score2","winnerP1","winnerP2","innerHTML","render","getScore","game","gameLoop","requestAnimationFrame"],"mappings":";;;AAWO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,UAAA,QAAA,QAAA,QAAA,OAAA,QAAA,MAAA,QAAA,UAAA,QAAA,cAAA,QAAA,aAAA,QAAA,YAAA,EAXA,IAAMA,EAAS,6BAWf,QAAA,OAAA,EATA,IAAMC,EAAe,EAChBC,EAAgB,GAChBC,EAAY,GACZC,EAAQ,GACRC,EAAS,EACTC,EAAU,GACVC,EAAY,GAGjB,QAAA,UAAA,EAAA,QAAA,QAAA,EAAA,QAAA,OAAA,EAAA,QAAA,MAAA,EAAA,QAAA,UAAA,EAAA,QAAA,cAAA,EAAA,QAAA,aAAA,EAAA,IAAMC,EAAO,CAChBC,KAAK,IACLC,OAAO,IACPC,KAAK,UACLC,OAAO,YACPC,MAAO,IACPC,MAAO,KANJ,QAAA,KAAA;;ACcF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAzBL,IAAA,EAAA,QAAA,eAyBK,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAvBgBC,IAAAA,EAuBhB,WAtBWC,SAAAA,EAAAA,EAAOC,GAAQ,EAAA,KAAA,GAClBD,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EAoBjB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAlBMC,MAAAA,SAAAA,GACCC,IAAAA,EAAOC,SAASC,gBAAgBrB,EAAzB,OAAiC,QAC5CmB,EAAKG,eAAe,KAAM,QAAS,KAAKN,OACxCG,EAAKG,eAAe,KAAM,SAAU,KAAKL,QACzCE,EAAKG,eAAe,KAAM,OAAQ,WAClCH,EAAKG,eAAe,KAAM,IAAK,GAC/BH,EAAKG,eAAe,KAAM,IAAK,GAC/BJ,EAAIK,YAAYJ,GAEZK,IAAAA,EAAOJ,SAASC,gBAAgBrB,EAAzB,OAAiC,QAC5CwB,EAAKF,eAAe,KAAM,KAAM,KAAKN,MAAM,GAC3CQ,EAAKF,eAAe,KAAM,KAAM,GAChCE,EAAKF,eAAe,KAAM,KAAM,KAAKN,MAAM,GAC3CQ,EAAKF,eAAe,KAAM,KAAM,KAAKL,QACrCO,EAAKF,eAAe,KAAM,SAAU,SACpCE,EAAKF,eAAe,KAAM,eAAgB,GAC1CE,EAAKF,eAAe,KAAM,mBAAoB,SAC9CJ,EAAIK,YAAYC,OACnB,EAAA,GAAA,QAAA,QAAA;;ACiCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1DL,IAAA,EAAA,QAAA,eA0DK,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAxDgBC,IAAAA,EAwDhB,WAvDWC,SAAAA,EAAAA,EAAaC,EAAaC,EAAcC,EAAUC,EAAUC,EAAOC,GAAS,IAAA,EAAA,KAAA,EAAA,KAAA,GAC/EN,KAAAA,YAAcA,EACdC,KAAAA,YAAcA,EACdC,KAAAA,aAAeA,EACfK,KAAAA,EAAIJ,EACJK,KAAAA,EAAIJ,EACJK,KAAAA,MAAQ,EACRC,KAAAA,MAAQhC,EAAb,MACAgB,SAASiB,iBAAiB,UAAW,SAAAC,GAC1BA,OAAAA,EAAMC,KACJR,KAAAA,EACD,EAAKS,SACL,MACCR,KAAAA,EACD,EAAKS,cAyCpB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,gBAnCe,MAAA,WACPN,KAAAA,UAkCR,CAAA,IAAA,WA/BU,MAAA,WACA,OAAA,KAAKA,QA8Bf,CAAA,IAAA,SA3BQ,MAAA,WACAD,KAAAA,EAAIQ,KAAKC,IAAI,EAAG,KAAKT,EAAI,KAAKE,SA0BtC,CAAA,IAAA,WAxBU,MAAA,WACFF,KAAAA,EAAIQ,KAAKE,IAAI,KAAKlB,YAAc,KAAKE,aAAc,KAAKM,EAAI,KAAKE,SAuBzE,CAAA,IAAA,iBApBiB,MAAA,WAOPS,MANO,CACVC,KAAM,KAAKb,EACXc,IAAI,KAAKb,EACTc,MAAO,KAAKf,EAAI,KAAKN,YACrBsB,OAAQ,KAAKf,EAAI,KAAKN,gBAe7B,CAAA,IAAA,SATMV,MAAAA,SAAAA,GACCgC,IAAAA,EAAU9B,SAASC,gBAAgBrB,EAAzB,OAAiC,QAC/CkD,EAAQ5B,eAAe,KAAM,IAAK,KAAKW,GACvCiB,EAAQ5B,eAAe,KAAM,IAAK,KAAKY,GACvCgB,EAAQ5B,eAAe,KAAM,QAAS,KAAKK,aAC3CuB,EAAQ5B,eAAe,KAAM,SAAU,KAAKM,cAC5CsB,EAAQ5B,eAAe,KAAM,OAAQ,SACrCJ,EAAIK,YAAY2B,OAEnB,EAAA,GAAA,QAAA,QAAA;;;;;;ACgCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1FL,IAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,mCACA,EAAA,EAAA,QAAA,mCAwFK,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtFgBC,IAAAA,EAsFhB,WArFWC,SAAAA,EAAAA,EAAY1B,EAAa2B,EAAQC,GAAO,EAAA,KAAA,GAC3CF,KAAAA,WAAaA,EACb1B,KAAAA,YAAcA,EACd2B,KAAAA,OAASA,EACTE,KAAAA,UAAY,EACZC,KAAAA,KAAO,IAAIC,MAAMC,EAAV,SACPC,KAAAA,MAAQ,IAAIF,MAAMG,EAAV,SACRC,KAAAA,QACAP,KAAAA,MAAQA,EA6EhB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA1EO,MAAA,WAMG,IALFrB,KAAAA,EAAI,KAAKmB,WAAa,EACtBlB,KAAAA,EAAI,KAAKR,YAAc,EACvBoC,KAAAA,GAAK,EACLC,KAAAA,GAAK,EAES,IAAZ,KAAKA,IACHA,KAAAA,GAAKrB,KAAKsB,MAAsB,EAAhBtB,KAAKuB,SAAe,GAExCH,KAAAA,GAAK,KAAKP,WAAa,EAAIb,KAAKwB,IAAI,KAAKH,OAiEjD,CAAA,IAAA,gBA7De,MAAA,WACNI,IAAAA,EAAU,KAAKjC,EAAI,KAAKmB,QAAU,EAClCe,EAAa,KAAKlC,EAAI,KAAKmB,QAAU,KAAK3B,aAC5CyC,GAAWC,KACNL,KAAAA,IAAgB,EAAX,KAAKA,MAyDtB,CAAA,IAAA,gBApDaM,MAAAA,SAAAA,EAASC,GACf,KAAKrC,GAAK,GACVqC,EAAQC,gBACHhB,KAAAA,WAA8B,EAAlB,KAAKA,UACjBM,KAAAA,SAEE,KAAK5B,GAAK,KAAKmB,aACtBiB,EAAQE,gBACHhB,KAAAA,WAA8B,EAAlB,KAAKA,UACjBM,KAAAA,WA2CZ,CAAA,IAAA,kBAvCeQ,MAAAA,SAAAA,EAASC,GACjB,GAAA,KAAKR,GAAK,EAAG,CACPU,IAAAA,EAAKF,EAAQG,iBACf,KAAKxC,EAAI,KAAKoB,QAAUmB,EAAG1B,MAC3B,KAAKb,EAAI,KAAKoB,QAAUmB,EAAGxB,OAC3B,KAAKd,GAAKsC,EAAGzB,KACb,KAAKb,GAAKsC,EAAGvB,SACRa,KAAAA,IAAgB,EAAX,KAAKA,GACVH,KAAAA,MAAMe,OACNpB,KAAAA,MAAQ,iBAGd,CACGqB,IAAAA,EAAKN,EAAQI,iBACf,KAAKxC,EAAI,KAAKoB,QAAUsB,EAAG7B,MAC3B,KAAKb,EAAI,KAAKoB,QAAUsB,EAAG3B,OAC3B,KAAKd,GAAKyC,EAAG5B,KACb,KAAKb,GAAKyC,EAAG1B,SACRa,KAAAA,IAAgB,EAAX,KAAKA,GACVN,KAAAA,KAAKkB,OACLpB,KAAAA,MAAQ,gBAmBxB,CAAA,IAAA,SAZMpC,MAAAA,SAAAA,EAAKmD,EAASC,GACbM,IAAAA,EAASxD,SAASC,gBAAgBrB,EAAzB,OAAiC,UAC9C4E,EAAOtD,eAAe,KAAM,OAAQ,KAAKgC,OACzCsB,EAAOtD,eAAe,KAAM,KAAM,KAAKW,GACvC2C,EAAOtD,eAAe,KAAM,KAAM,KAAKY,GACvC0C,EAAOtD,eAAe,KAAM,IAAK,KAAK+B,QACjCpB,KAAAA,EAAI,KAAKA,EAAI,KAAK6B,GAClB5B,KAAAA,EAAI,KAAKA,EAAI,KAAK6B,GAClBc,KAAAA,gBACAC,KAAAA,gBAAgBT,EAASC,GACzBS,KAAAA,cAAcV,EAASC,GAC5BpD,EAAIK,YAAYqD,OACnB,EAAA,GAAA,QAAA,QAAA;;AC1EA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhBL,IAAA,EAAA,QAAA,eAgBK,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAdgBI,IAAAA,EAchB,WAbWC,SAAAA,EAAAA,EAAWC,GAAW,EAAA,KAAA,GACzBjD,KAAAA,EAAIgD,EACJ/C,KAAAA,EAAIgD,EAWZ,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SATMhE,MAAAA,SAAAA,EAAKiB,GACJgD,IAAAA,EAAO/D,SAASC,gBAAgBrB,EAAzB,OAAiC,QAC5CmF,EAAK7D,eAAe,KAAM,OAAQ,QAClC6D,EAAK7D,eAAe,KAAM,YAAaf,EAAvC,WACA4E,EAAK7D,eAAe,KAAM,cAAe,8BACzC6D,EAAK7D,eAAe,KAAM,IAAK,KAAKW,GACpCkD,EAAK7D,eAAe,KAAM,IAAK,KAAKY,GACpCiD,EAAKC,YAAcjD,EACnBjB,EAAIK,YAAY4D,OACnB,EAAA,GAAA,QAAA,QAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhBL,IAAA,EAAA,QAAA,eAgBK,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAdgBE,IAAAA,EAchB,WAbWJ,SAAAA,EAAAA,EAAWC,GAAW,EAAA,KAAA,GACzBjD,KAAAA,EAAIgD,EACJ/C,KAAAA,EAAIgD,EAWZ,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SATMhE,MAAAA,SAAAA,GACCiE,IAAAA,EAAO/D,SAASC,gBAAgBrB,EAAzB,OAAiC,QAC5CmF,EAAK7D,eAAe,KAAM,OAAQ,QAClC6D,EAAK7D,eAAe,KAAM,YAAaf,EAAvC,WACA4E,EAAK7D,eAAe,KAAM,cAAe,8BACzC6D,EAAK7D,eAAe,KAAM,IAAK,KAAKW,GACpCkD,EAAK7D,eAAe,KAAM,IAAK,KAAKY,GACpCiD,EAAKC,YAAc,UACnBlE,EAAIK,YAAY4D,OACnB,EAAA,GAAA,QAAA,QAAA;;ACyEF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxFH,IAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,cAmFG,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjFkBG,IAAAA,EAiFlB,WAhFWC,SAAAA,EAAAA,EAASvE,EAAOC,GAAQ,IAAA,EAAA,KAAA,EAAA,KAAA,GAC7BsE,KAAAA,QAAUA,EACVvE,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EACTuE,KAAAA,QAAS,EACT1E,KAAAA,OAAQ,EACR2E,KAAAA,YAAcrE,SAASsE,eAAe,KAAKH,SAC3CI,KAAAA,MAAQ,IAAI5E,EAAJ,QAAU,KAAKC,MAAO,KAAKC,QAElC2E,IAAAA,GAAY,KAAK3E,OAASf,EAAf,eAAgC,EAC5CgD,KAAAA,QAAU,IAAIzB,EAAJ,QAAW,KAAKR,OAAQhB,EAAxB,aAAsCC,EAAtC,cAAqDC,EAArD,UAAgEyF,EAAUpF,EAAKC,KAAAA,KAAMD,EAAKE,KAAAA,QAEnGmF,IAAAA,EAAa,KAAK7E,MAAQb,EAAb,UAAyBF,EAA5C,aACK6F,KAAAA,QAAU,IAAIrE,EAAJ,QAAW,KAAKR,OAAQhB,EAAxB,aAAsCC,EAAtC,cAAqD2F,EAAYD,EAAUpF,EAAKG,KAAAA,KAAMH,EAAKI,KAAAA,QAErGmF,KAAAA,KAAO,IAAI5C,EAAJ,QAAS,KAAKnC,MAAO,KAAKC,OAAQZ,EAAlC,OAA0C,QACjD2F,KAAAA,MAAQ,IAAI7C,EAAJ,QAAS,KAAKnC,MAAO,KAAKC,OAAQX,EAAlC,QAA2C,QAEnD2F,KAAAA,OAAS,IAAIjB,EAAJ,QAAU,KAAKhE,MAAQ,EAAI,GAAI,IACxCkF,KAAAA,OAAS,IAAIlB,EAAJ,QAAU,KAAKhE,MAAQ,EAAI,GAAI,IAExCmF,KAAAA,SAAW,IAAId,EAAJ,QAAY,GAAI,KAC3Be,KAAAA,SAAW,IAAIf,EAAJ,QAAY,IAAK,KAGjCjE,SAASiB,iBAAiB,QAAS,SAACC,GAC9BA,EAAMC,MAAQ/B,EAAKK,KAAAA,QACrB,EAAK2E,QAAU,EAAKA,UAIxBpE,SAASiB,iBAAiB,UAAW,SAACC,GAChCA,EAAMC,MAAQ/B,EAAKM,KAAAA,QACrB,EAAKA,OAAQ,KA+ClB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA1CQ,MAAA,WACH,GAAA,KAAK0E,OAGP,OAFKtC,KAAAA,QAAQd,MAAQ,OAChB0D,KAAAA,QAAQ1D,MAAQ,GAGhBc,KAAAA,QAAQd,MAAQhC,EAArB,MACK0F,KAAAA,QAAQ1D,MAAQhC,EAArB,MAGGqF,KAAAA,YAAYY,UAAY,GACzBnF,IAAAA,EAAME,SAASC,gBAAgBrB,EAAzB,OAAiC,OAE3CkB,EAAII,eAAe,KAAM,QAAS,KAAKN,OACvCE,EAAII,eAAe,KAAM,SAAU,KAAKL,QACxCC,EAAII,eAAe,KAAM,UAAkB,OAAA,OAAA,KAAKN,MAAS,KAAA,OAAA,KAAKC,SACzDwE,KAAAA,YAAYlE,YAAYL,GACxByE,KAAAA,MAAMW,OAAOpF,GACbgC,KAAAA,QAAQoD,OAAOpF,GACf4E,KAAAA,QAAQQ,OAAOpF,GAEhB,KAAKgC,QAAQqD,YAAc,GAAK,KAAKT,QAAQS,YAAc,GACxDP,KAAAA,MAAMM,OAAOpF,EAAK,KAAKgC,QAAS,KAAK4C,SAGvCG,KAAAA,OAAOK,OAAOpF,EAAK,KAAKgC,QAAQqD,YAChCL,KAAAA,OAAOI,OAAOpF,EAAK,KAAK4E,QAAQS,aAElB,IAAf,KAAKzF,QAGFiF,KAAAA,KAAKO,OAAOpF,EAAK,KAAKgC,QAAS,KAAK4C,SAGvC,KAAK5C,QAAQqD,YAAc,GACxBf,KAAAA,QAAS,EACTW,KAAAA,SAASG,OAAOpF,IAEd,KAAK4E,QAAQS,YAAc,IAC7Bf,KAAAA,QAAS,EACTY,KAAAA,SAASE,OAAOpF,SAExB,EAAA,GAAA,QAAA,QAAA;;ACnFH,aANA,QAAA,qBACA,IAAA,EAAA,EAAA,QAAA,oBAKA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFA,IAAMsF,EAAO,IAAIlB,EAAJ,QAAS,OAAQ,IAAK,MAEnC,SAAUmB,IACRD,EAAKF,SACLI,sBAAsBD,GAFxB","file":"src.80369259.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const PADDLE_WIDTH = 8, \n            PADDLE_HEIGHT = 56, \n            BOARD_GAP = 10, \n            SPEED = 10,\n            RADIUS = 8,\n            RADIUS2 = 10,\n            TEXT_SIZE = 30;\n            \n\nexport const KEYS = {\n    p1up:'w',\n    p1down:'s',\n    p2up:'ArrowUp',\n    p2down:'ArrowDown',\n    pause: ' ',\n    begin: 'b',\n\n};","import {SVG_NS} from '../settings';\n\nexport default class Board {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    render(svg) {\n        let rect = document.createElementNS(SVG_NS, 'rect');\n        rect.setAttributeNS(null, \"width\", this.width);\n        rect.setAttributeNS(null, \"height\", this.height);\n        rect.setAttributeNS(null, \"fill\", \"#353535\");\n        rect.setAttributeNS(null, \"x\", 0);\n        rect.setAttributeNS(null, \"y\", 0);\n        svg.appendChild(rect);\n        \n        let line = document.createElementNS(SVG_NS, 'line');\n        line.setAttributeNS(null, \"x1\", this.width/2);\n        line.setAttributeNS(null, \"y1\", 0);\n        line.setAttributeNS(null, \"x2\", this.width/2);\n        line.setAttributeNS(null, \"y2\", this.height);\n        line.setAttributeNS(null, \"stroke\", \"white\");\n        line.setAttributeNS(null, \"stroke-width\", 2);\n        line.setAttributeNS(null, \"stroke-dasharray\", \"18 10\");\n        svg.appendChild(line);\n    }\n}","import {SVG_NS, SPEED} from '../settings';\n\nexport default class Paddle {\n    constructor(boardHeight, paddleWidth, paddleHeight, initialX, initialY, keyUp, keyDown) {\n        this.boardHeight = boardHeight;\n        this.paddleWidth = paddleWidth;\n        this.paddleHeight = paddleHeight;\n        this.x = initialX;\n        this.y = initialY;\n        this.score = 0;\n        this.speed = SPEED;\n        document.addEventListener(\"keydown\", event => {\n            switch(event.key) {\n                case keyUp: \n                    this.moveUp();\n                    break;\n                case keyDown:\n                    this.moveDown();\n                    break;\n            }\n        });\n    }\n\n    increaseScore() {\n        this.score++;\n    }\n\n    getScore() {\n        return this.score;\n    }\n\n    moveUp() {\n        this.y = Math.max(0, this.y - this.speed);\n    }\n    moveDown() {\n        this.y = Math.min(this.boardHeight - this.paddleHeight, this.y + this.speed);\n    }\n\n    getCoordinates () {\n        const walls = {\n            left: this.x,\n            top:this.y,\n            right: this.x + this.paddleWidth,\n            bottom: this.y + this.paddleHeight,\n        }\n        return walls;\n    }\n\n\n    render(svg) {\n        let paddle1 = document.createElementNS(SVG_NS, 'rect');\n        paddle1.setAttributeNS(null, \"x\", this.x);\n        paddle1.setAttributeNS(null, \"y\", this.y);\n        paddle1.setAttributeNS(null, \"width\", this.paddleWidth);\n        paddle1.setAttributeNS(null, \"height\", this.paddleHeight);\n        paddle1.setAttributeNS(null, \"fill\", \"beige\");\n        svg.appendChild(paddle1);\n\n    }\n}","import { SVG_NS } from '../settings';\nimport audioFile from '../../public/sounds/meowp1.mp3';\nimport audioFile2 from '../../public/sounds/meowp2.wav';\n\nexport default class Ball {\n    constructor(boardWidth, boardHeight, radius, color) {\n        this.boardWidth = boardWidth;\n        this.boardHeight = boardHeight;\n        this.radius = radius;\n        this.direction = 1;\n        this.ping = new Audio(audioFile);\n        this.ping2 = new Audio(audioFile2);\n        this.reset();\n        this.color = color;\n    }\n\n    reset() {\n        this.x = this.boardWidth / 2;\n        this.y = this.boardHeight / 2;\n        this.vx = 0;\n        this.vy = 0;\n\n        while (this.vy === 0) {\n            this.vy = Math.floor(Math.random() * 6 - 3);\n        }\n        this.vx = this.direction * (4 - Math.abs(this.vy));\n\n    }\n\n    wallCollision() {\n        const hitsTop = this.y - this.radius <= 0;\n        const hitsBottom = this.y + this.radius >= this.boardHeight;\n        if (hitsTop || hitsBottom) {\n            this.vy = this.vy * -1;\n        }\n\n    }\n\n    goalCollision(player1, player2) {\n        if (this.x <= 0) {\n            player2.increaseScore();\n            this.direction = this.direction * -1;\n            this.reset();\n\n        } else if (this.x >= this.boardWidth) {\n            player1.increaseScore();\n            this.direction = this.direction * -1;\n            this.reset();\n        }\n    }\n\n    paddleCollision(player1, player2) {\n        if (this.vx > 0) {\n            const p2 = player2.getCoordinates();\n            if (this.x + this.radius >= p2.left &&\n                this.x + this.radius <= p2.right &&\n                this.y >= p2.top &&\n                this.y <= p2.bottom) {\n                this.vx = this.vx * -1;\n                this.ping2.play();\n                this.color = \"lightblue\";\n\n            }\n        } else {\n            const p1 = player1.getCoordinates();\n            if (this.x - this.radius >= p1.left &&\n                this.x - this.radius <= p1.right &&\n                this.y >= p1.top &&\n                this.y <= p1.bottom) {\n                this.vx = this.vx * -1;\n                this.ping.play();\n                this.color = \"lightpink\";\n\n            }\n        }\n    }\n\n\n    render(svg, player1, player2) {\n        let circle = document.createElementNS(SVG_NS, 'circle');\n        circle.setAttributeNS(null, \"fill\", this.color);\n        circle.setAttributeNS(null, \"cx\", this.x);\n        circle.setAttributeNS(null, \"cy\", this.y);\n        circle.setAttributeNS(null, \"r\", this.radius);\n        this.x = this.x + this.vx;\n        this.y = this.y + this.vy;\n        this.wallCollision();\n        this.paddleCollision(player1, player2);\n        this.goalCollision(player1, player2);\n        svg.appendChild(circle);\n    }\n}","import {SVG_NS, TEXT_SIZE} from '../settings';\n\nexport default class Score {\n    constructor(xPosition, yPosition) {\n        this.x = xPosition;\n        this.y = yPosition;\n    }\n    render(svg, score) {\n        let text = document.createElementNS(SVG_NS, 'text');\n        text.setAttributeNS(null, \"fill\", \"#FFF\");\n        text.setAttributeNS(null, \"font-size\", TEXT_SIZE);\n        text.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', monotype\");\n        text.setAttributeNS(null, \"x\", this.x);\n        text.setAttributeNS(null, \"y\", this.y);\n        text.textContent = score;\n        svg.appendChild(text);\n    }\n}\n","import {SVG_NS, TEXT_SIZE} from '../settings';\n\nexport default class endGame {\n    constructor(xPosition, yPosition) {\n        this.x = xPosition;\n        this.y = yPosition;\n    }\n    render(svg) {\n        let text = document.createElementNS(SVG_NS, 'text');\n        text.setAttributeNS(null, \"fill\", \"#FFF\");\n        text.setAttributeNS(null, \"font-size\", TEXT_SIZE);\n        text.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', monotype\");\n        text.setAttributeNS(null, \"x\", this.x);\n        text.setAttributeNS(null, \"y\", this.y);\n        text.textContent = \"Winner!\";\n        svg.appendChild(text);\n    }\n}","\nimport { SVG_NS, PADDLE_WIDTH, PADDLE_HEIGHT, BOARD_GAP, KEYS, RADIUS, RADIUS2, SPEED } from '../settings';\nimport Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball';\nimport Score from './Score';\nimport endGame from './endGame';\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.paused = false;\n    this.begin = false;\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n    const boardMid = (this.height - PADDLE_HEIGHT) / 2;\n    this.paddle1 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, BOARD_GAP, boardMid, KEYS.p1up, KEYS.p1down);\n\n    const paddle2Gap = this.width - BOARD_GAP - PADDLE_WIDTH;\n    this.paddle2 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, paddle2Gap, boardMid, KEYS.p2up, KEYS.p2down);\n\n    this.ball = new Ball(this.width, this.height, RADIUS, \"#FFF\");\n    this.ball2 = new Ball(this.width, this.height, RADIUS2, \"#FFF\");\n\n    this.score1 = new Score(this.width / 2 - 50, 30);\n    this.score2 = new Score(this.width / 2 + 25, 30);\n\n    this.winnerP1 = new endGame(60, 220);\n    this.winnerP2 = new endGame(316, 220);\n\n\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === KEYS.pause) {\n        this.paused = !this.paused;\n      }\n    });\n\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === KEYS.begin) {\n        this.begin = true;\n      }\n    });   \n  }\n\n  render() {\n    if (this.paused) {\n      this.paddle1.speed = 0;\n      this.paddle2.speed = 0;\n      return;\n    } else {\n      this.paddle1.speed = SPEED;\n      this.paddle2.speed = SPEED;\n    }\n\n    this.gameElement.innerHTML = '';\n    let svg = document.createElementNS(SVG_NS, 'svg');\n\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n    svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n    this.gameElement.appendChild(svg);\n    this.board.render(svg);\n    this.paddle1.render(svg);\n    this.paddle2.render(svg);\n\n    if (this.paddle1.getScore() >= 3 && this.paddle2.getScore() >= 3) {\n      this.ball2.render(svg, this.paddle1, this.paddle2);\n    }\n    \n    this.score1.render(svg, this.paddle1.getScore());\n    this.score2.render(svg, this.paddle2.getScore());\n    \n    if (this.begin === false) {\n      return;\n    } else {\n      this.ball.render(svg, this.paddle1, this.paddle2);\n    }\n\n    if (this.paddle1.getScore() >= 6) {\n      this.paused = true;\n      this.winnerP1.render(svg);\n    }\n    else if (this.paddle2.getScore() >= 6) {\n      this.paused = true;\n      this.winnerP2.render(svg);\n    };\n  }\n}","import './styles/game.css';\nimport Game from './partials/Game';\n\n// create a game instance\nconst game = new Game('game', 512, 256);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}